#################################
# GLOBAL REPLICATOR PARAMETERS  #
#################################

# Replicator auto-enable.  If true, replicator automatically goes online 
# at start-up time. 
replicator.auto_enable=true

# Database global settings for datasource.
replicator.datasource.maxIdle=10
replicator.datasource.maxWait=60000 
replicator.datasource.maxActive=30

# Master & Slave information
replicator.global.master=${jingwei.replicator.global.master}

# Database connection information. 
replicator.global.db.port=3306
replicator.global.db.user=${jingwei.replicator.global.db.user}
replicator.global.db.password=${jingwei.replicator.global.db.password}


# Transaction fragment size.
replicator.transaction_frag_size=1024

# Replicator offline mode: don't connect master.
replicator.offline_mode=false

###########################
# OPEN REPLICATOR PLUGINS #
###########################

# Available OpenReplicator providers
replicator.plugin.tungsten=com.taobao.tddl.venus.replicator.management.tungsten.TungstenPlugin

# Chosen OpenReplicator provider
replicator.plugin=tungsten

#################################
# REPLICATOR PIPELINES          #
#################################

# Generic pipelines. Support defining multiple pipelines like: 
# replicator.pipelines=default,dummy
replicator.pipelines=default

# Default pipeline.
replicator.pipeline.default=mysql-to-dbsync
replicator.pipeline.default.autoSync=true

# MySQL to dbsync extractor.
replicator.stage.mysql-to-dbsync=com.taobao.tddl.venus.replicator.pipeline.SingleThreadStageTask
replicator.stage.mysql-to-dbsync.extractor=mysql
replicator.stage.mysql-to-dbsync.applier=dbsync
replicator.stage.mysql-to-dbsync.filters=dbfilter,metafilter,logger

##############
# EXTRACTORS #
##############

# Direct Mysql log extracting client properties.
replicator.plugin.directRelay=com.taobao.tddl.venus.replicator.extractor.mysql.DirectLogExtractor
replicator.plugin.directRelay.binlog_file_pattern=mysql-bin
replicator.plugin.directRelay.host=${replicator.global.master}
replicator.plugin.directRelay.port=${replicator.global.db.port}
replicator.plugin.directRelay.user=${replicator.global.db.user}
replicator.plugin.directRelay.password=${replicator.global.db.password}
replicator.plugin.directRelay.serverId=28

# Thread pool & queue confuguration
replicator.plugin.directRelay.useThreadPool=true
replicator.plugin.directRelay.corePoolSize=4
replicator.plugin.directRelay.maximumPoolSize=4
replicator.plugin.directRelay.queueCapacity=4096

# MySQL binlog extractor properties.  
replicator.extractor.mysql=com.taobao.tddl.venus.replicator.extractor.mysql.MySQLExtractor
replicator.extractor.mysql.host=${replicator.global.master}
replicator.extractor.mysql.port=${replicator.global.db.port}
replicator.extractor.mysql.user=${replicator.global.db.user}
replicator.extractor.mysql.password=${replicator.global.db.password}
replicator.extractor.mysql.logClient=directRelay

############
# APPLIERS #
############

# Dbsync adapter applier
replicator.applier.dbsync=com.taobao.tddl.venus.replicator.dbsync.DbsyncApplier

###########
# FILTERS # 
###########

# Logging filter.  Logs each event to current system log. 
replicator.filter.logger=com.taobao.tddl.venus.replicator.filter.LoggingFilter

# Database do/ignore filter. Do/Ignore database names that match the pattern. 
replicator.filter.dbfilter=com.taobao.tddl.venus.replicator.filter.ReplicateFilter
replicator.filter.dbfilter.ignore_db_filter=(mysql)|(test)|(information_schema)|(performance_schema)
replicator.filter.dbfilter.do_db_filter=^(icdb)+[0-9]{1,2}$
replicator.filter.dbfilter.do_tab_filter=^(auction_auctions_|sku_){1}[0-9]{4}$ 

# MySQL meta-data filter. fullfill column names into row-based event.
replicator.filter.metafilter=com.taobao.tddl.venus.replicator.filter.MetaDataFilter
replicator.filter.metafilter.host=${replicator.global.master}
replicator.filter.metafilter.port=${replicator.global.db.port}
replicator.filter.metafilter.user=${replicator.global.db.user}
replicator.filter.metafilter.password=${replicator.global.db.password}

####################################################
# ERROR-HANDLING AND CONSISTENCY-CHECKING POLICIES #
####################################################

# How to react on extractor failure. Possible values are 'stop' or 'warn'. 
replicator.extractor.failure_policy=stop

# How to react on applier failure. Possible values are 'stop' or 'warn'. 
replicator.applier.failure_policy=stop